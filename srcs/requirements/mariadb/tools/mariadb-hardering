#!/usr/bin/env sh

generate_root_pass()
{
	< /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c${1:-16}
}

if [ ! -d "${VOLUME_MOUNT_PATH}/mysql" ]; then
	MYSQL_ROOT_PASS=$(generate_root_pass)
	echo "MYSQL root random key generated (you should save it): ${MYSQL_ROOT_PASS}"

	mysql_install_db > /dev/null 2>&1
	if [ $? -ne 0 ]; then
		echo "I can't initialize MySQL database. Exiting!!"
		exit 1
	fi

	cat << EOF | mysqld --bootstrap
USE mysql;
FLUSH PRIVILEGES;

DROP DATABASE IF EXISTS test;
-- CREATE DATABASE IF NOT EXISTS ${WORDPRESS_DATABASE};

ALTER USER IF EXISTS 'root'@'localhost' IDENTIFIED BY '${MYSQL_ROOT_PASS}';
CREATE USER IF NOT EXISTS '${WORDPRESS_USERNAME}'@'${WORDPRESS_USERHOST}' IDENTIFIED BY '${WORDPRESS_USERPASS}';
GRANT ALL PRIVILEGES ON ${WORDPRESS_DATABASE}.* TO '${WORDPRESS_USERNAME}'@'${WORDPRESS_USERHOST}';

DROP USER ''@${HOSTNAME};

-- drop empty and mysql users
-- SELECT GROUP_CONCAT('\'',user, '\'@\'', host, '\'') INTO @users FROM mysql.user WHERE user = 'mysql' OR user = '';
-- SET @users = CONCAT('DROP USER ', @users);
-- PREPARE stmt FROM @users;
-- EXECUTE stmt;

FLUSH PRIVILEGES;

EOF

	if [ $? -ne 0 ]; then
		echo "I can't secure the MySQL permissions. Exiting!!"
		exit 1
	fi

fi
